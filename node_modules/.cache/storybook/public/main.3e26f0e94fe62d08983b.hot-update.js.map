{"version":3,"file":"main.3e26f0e94fe62d08983b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAGA;AArCA;AAuCA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAGA;AA7BA;AA6BA;;AAIA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://sitio3/./src/stories/Dialog.stories.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import * as React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Button from '@mui/material/Button';\\nimport Avatar from '@mui/material/Avatar';\\nimport List from '@mui/material/List';\\nimport ListItem from '@mui/material/ListItem';\\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\\nimport ListItemText from '@mui/material/ListItemText';\\nimport DialogTitle from '@mui/material/DialogTitle';\\nimport Dialog from '@mui/material/Dialog';\\nimport PersonIcon from '@mui/icons-material/Person';\\nimport AddIcon from '@mui/icons-material/Add';\\nimport Typography from '@mui/material/Typography';\\nimport { blue } from '@mui/material/colors';\\n\\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\\n\\nfunction SimpleDialog(props) {\\n  const { onClose, selectedValue, open } = props;\\n\\n  const handleClose = () => {\\n    onClose(selectedValue);\\n  };\\n\\n  const handleListItemClick = (value) => {\\n    onClose(value);\\n  };\\n\\n  return (\\n    <Dialog onClose={handleClose} open={open}>\\n      <DialogTitle>Set backup account</DialogTitle>\\n      <List sx={{ pt: 0 }}>\\n        {emails.map((email) => (\\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\\n            <ListItemAvatar>\\n              <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\\n                <PersonIcon />\\n              </Avatar>\\n            </ListItemAvatar>\\n            <ListItemText primary={email} />\\n          </ListItem>\\n        ))}\\n\\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\\n          <ListItemAvatar>\\n            <Avatar>\\n              <AddIcon />\\n            </Avatar>\\n          </ListItemAvatar>\\n          <ListItemText primary=\\\"Add account\\\" />\\n        </ListItem>\\n      </List>\\n    </Dialog>\\n  );\\n}\\n\\nSimpleDialog.propTypes = {\\n  onClose: PropTypes.func.isRequired,\\n  open: PropTypes.bool.isRequired,\\n  selectedValue: PropTypes.string.isRequired,\\n};\\n\\nexport default function SimpleDialogDemo() {\\n  const [open, setOpen] = React.useState(false);\\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\\n\\n  const handleClickOpen = () => {\\n    setOpen(true);\\n  };\\n\\n  const handleClose = (value) => {\\n    setOpen(false);\\n    setSelectedValue(value);\\n  };\\n\\n  return (\\n    <div>\\n      <Typography variant=\\\"subtitle1\\\" component=\\\"div\\\">\\n        Selected: {selectedValue}\\n      </Typography>\\n      <br />\\n      <Button variant=\\\"outlined\\\" onClick={handleClickOpen}>\\n        Open simple dialog\\n      </Button>\\n      <SimpleDialog\\n        selectedValue={selectedValue}\\n        open={open}\\n        onClose={handleClose}\\n      />\\n    </div>\\n  );\\n};\\n\\n\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template = (args) => <Button {...args} />;\\n\\nexport const Primary = Template.bind({});\\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\\nPrimary.args = {\\n  primary: true,\\n  label: 'Button',\\n};\\n\\nexport const Secondary = Template.bind({});\\nSecondary.args = {\\n  label: 'Button',\\n};\\n\\nexport const Large = Template.bind({});\\nLarge.args = {\\n  size: 'large',\\n  label: 'Button',\\n};\\n\\nexport const Small = Template.bind({});\\nSmall.args = {\\n  size: 'small',\\n  label: 'Button',\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":97},\"endLoc\":{\"col\":47,\"line\":97},\"startBody\":{\"col\":17,\"line\":97},\"endBody\":{\"col\":47,\"line\":97}},\"Secondary\":{\"startLoc\":{\"col\":17,\"line\":97},\"endLoc\":{\"col\":47,\"line\":97},\"startBody\":{\"col\":17,\"line\":97},\"endBody\":{\"col\":47,\"line\":97}},\"Large\":{\"startLoc\":{\"col\":17,\"line\":97},\"endLoc\":{\"col\":47,\"line\":97},\"startBody\":{\"col\":17,\"line\":97},\"endBody\":{\"col\":47,\"line\":97}},\"Small\":{\"startLoc\":{\"col\":17,\"line\":97},\"endLoc\":{\"col\":47,\"line\":97},\"startBody\":{\"col\":17,\"line\":97},\"endBody\":{\"col\":47,\"line\":97}}};\n    \nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport { blue } from '@mui/material/colors';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Set backup account</DialogTitle>\n      <List sx={{ pt: 0 }}>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar sx={{ bgcolor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem autoFocus button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\" component=\"div\">\n        Selected: {selectedValue}\n      </Typography>\n      <br />\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n};\n\n\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});;\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};\n\nexport const Secondary = Template.bind({});;\nSecondary.args = {\n  label: 'Button',\n};\n\nexport const Large = Template.bind({});;\nLarge.args = {\n  size: 'large',\n  label: 'Button',\n};\n\nexport const Small = Template.bind({});\nSmall.args = {\n  size: 'small',\n  label: 'Button',\n};\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Primary.parameters };\nSecondary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Secondary.parameters };\nLarge.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Large.parameters };\nSmall.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Small.parameters };"],"names":[],"sourceRoot":""}